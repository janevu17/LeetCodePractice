class Solution {
    public int rob(int[] nums) {
    
        
        if (nums.length == 0){
            return 0;
        }
        
        if (nums.length == 1){
            return nums[0];
        }
        
        if (nums.length == 2){
           return Math.max(nums[0], nums[1]);
            
        }
        
        int[] dp = new int[nums.length];
        
        
        dp[0] = nums[0];
        dp[1] = Math.max(nums[0], nums[1]);
        System.out.println(dp[2]);
        for (int i = 2; i < nums.length; i++){
            dp[i] = Math.max(dp[i - 2] + nums[i], dp[i - 1]);
            System.out.println(dp[i]);
        }
        
        return dp[nums.length - 1];
        
        
        
    }
}



Note: 

[1, 2, 3, 1]


dp[0] = 1
dp[1] = math.max(nums[0], nums[1]) = 2

dp[2] = math.max(dp[i - 2], nums[i], dp[i - 1]); = max(1+3, 2) = 4

dp[3] = max (2+1, 4) = 4

