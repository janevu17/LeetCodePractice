/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

    
class Solution {
    int smallerSum = 0; //keep track of total value of nodes in increasing order
    public TreeNode bstToGst(TreeNode root) {
        int sum = findSum(root);
        root = Gst(root, sum);
        return  root;
        
        
        
    }
    
    //
    public TreeNode Gst(TreeNode root, int sum){
        if (root == null){
            return null;
        }
        Gst(root.left, sum);
        
        int temp = root.val;
        root.val = sum - smallerSum; //root.val = total val - total value of nodes less than root node
        smallerSum += temp;
        
        Gst(root.right, sum);
        
        return root;
        
        
    }
    
    //find total sum of BST
    public int findSum(TreeNode root){
        if (root == null){
            return 0;
        }
         
        return root.val + findSum(root.left) + findSum(root.right) ;
    }
    
    
    
}
