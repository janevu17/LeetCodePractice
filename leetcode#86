/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode partition(ListNode head, int x) {
        if (head == null) {
            return head;
        }
        ListNode lessThanX = new ListNode(0);
        ListNode tempLessThanX = lessThanX;
        ListNode greaterThanX = new ListNode(0);
        ListNode tempGreaterThanX = greaterThanX;
        ListNode temp = head;
        
        while (temp != null) {
            ListNode tempNode = new ListNode(temp.val);
            if (temp.val < x) {
                lessThanX.next = tempNode;
                lessThanX = lessThanX.next;
            }
            else {
                greaterThanX.next = tempNode;
                greaterThanX = greaterThanX.next;
            }
            
            temp = temp.next;
        }
        
        lessThanX.next = tempGreaterThanX.next;
        
        return tempLessThanX.next;
        
        
    }
}
