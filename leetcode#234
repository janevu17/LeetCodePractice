/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        if (head == null || head.next == null){
            return true;
        }
        Stack<Integer> checkP = new Stack<Integer>();
        int listSize = 0;
        ListNode temp = head;
        while (temp != null){
            temp = temp.next;
            listSize++;
        }
        
        for (int i = 1; i <= (listSize/2); i++){
            checkP.push(head.val);
            head = head.next;
        }
        
        if (listSize % 2 == 1){
            head = head.next;
        }
        
        while (head != null){
            if (checkP.peek() == head.val){
                checkP.pop();
            }
            head = head.next;
        }
        
        if (checkP.isEmpty()){
            return true;
        }
        
        return false;
        
        
    }
}
